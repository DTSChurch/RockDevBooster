<Application x:Class="com.blueboxmoon.RockDevBooster.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:com.blueboxmoon.RockDevBooster"
             StartupUri="Views\MainWindow.xaml"
             DispatcherUnhandledException="Application_Exception">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Rock.Wpf;component/StyleResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Button Style: Menu Icon-->
            <Style x:Key="buttonStyleMenuIcon"
                   TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="./resources/#FontAwesome" />
                <Setter Property="Width" Value="80" />
                <Setter Property="Height" Value="65" />
                <Setter Property="FontSize" Value="32" />
                <Setter Property="Foreground" Value="#f3f3f3" />
                <Setter Property="BorderThickness" Value="0 0 0 1" />
                <Setter Property="BorderBrush" Value="#4d4b46" />
                <Setter Property="Background" Value="#3a3935"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4f4e48"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="buttonStyleMenuIconActive"
                   BasedOn="{StaticResource buttonStyleMenuIcon}"
                   TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#ee7624" />
            </Style>

            <!-- Button Style: Icon-->
            <Style x:Key="buttonStyleIcon"
                   BasedOn="{StaticResource buttonStyle}"
                   TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="./resources/#FontAwesome" />
                <Setter Property="Width" Value="36" />
                <Setter Property="FontSize" Value="12" />
            </Style>

            <!-- Button Style: Icon Success -->
            <Style x:Key="buttonStyleIconSuccess"
                   BasedOn="{StaticResource buttonStyleIcon}"
                   TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#fff" />
                <Setter Property="Background" Value="#5c9e7d" />
                <Setter Property="BorderBrush" Value="#538e70" />
            </Style>

            <!-- Button Style: Mini Icon Success -->
            <Style x:Key="buttonStyleMiniIconSuccess"
                   BasedOn="{StaticResource buttonStyleMiniIcon}"
                   TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#fff" />
                <Setter Property="Background" Value="#5c9e7d" />
                <Setter Property="BorderBrush" Value="#538e70" />
            </Style>

            <!-- Button Style: Icon Action -->
            <Style x:Key="buttonStyleIconAction"
                   BasedOn="{StaticResource buttonStyleIcon}"
                   TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#fff" />
                <Setter Property="Background" Value="#466673" />
                <Setter Property="BorderBrush" Value="#365663" />
            </Style>

            <!-- Button Style: Mini Icon Action -->
            <Style x:Key="buttonStyleMiniIconAction"
                   BasedOn="{StaticResource buttonStyleMiniIcon}"
                   TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#fff" />
                <Setter Property="Background" Value="#466673" />
                <Setter Property="BorderBrush" Value="#365663" />
            </Style>

            <!-- Button Style: Icon Danger -->
            <Style x:Key="buttonStyleIconDanger"
                   BasedOn="{StaticResource buttonStyleIcon}"
                   TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#fff" />
                <Setter Property="Background" Value="#ac3434" />
                <Setter Property="BorderBrush" Value="#902c2c" />
            </Style>

            <Style x:Key="menuTabControl" TargetType="{x:Type TabControl}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid KeyboardNavigation.TabNavigation="Local">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel
                                    Name="HeaderPanel"
                                    Grid.Row="0"
                                    Panel.ZIndex="1" 
                                    Margin="1,2,4,-1" 
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1"
                                    Background="Transparent" />
                                <Border 
                                    Name="Border" 
                                    Grid.Row="1" 
                                    BorderThickness="0" 
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2" >
                                    <ContentPresenter 
                                        Name="PART_SelectedContentHost"
                                        Margin="0"
                                        ContentSource="SelectedContent" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="subMenuHeader" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#f3f3f3" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0,16" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontFamily" Value="{StaticResource OpenSans-SemiBold}" />
                <Setter Property="Width" Value="150" />
            </Style>

            <Style x:Key="subMenuButton" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="150" />
                <Setter Property="FontFamily" Value="{StaticResource OpenSans-Regular}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#f3f3f3" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Padding" Value="12,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="buttonBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="{TemplateBinding Width}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#ee7624"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
